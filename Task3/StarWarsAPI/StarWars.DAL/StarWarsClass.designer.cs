#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StarWars.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="star-wars")]
	public partial class StarWarsClassDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertfilm(film instance);
    partial void Updatefilm(film instance);
    partial void Deletefilm(film instance);
    partial void Insertvehicles_pilot(vehicles_pilot instance);
    partial void Updatevehicles_pilot(vehicles_pilot instance);
    partial void Deletevehicles_pilot(vehicles_pilot instance);
    partial void Insertfilms_character(films_character instance);
    partial void Updatefilms_character(films_character instance);
    partial void Deletefilms_character(films_character instance);
    partial void Insertfilms_planet(films_planet instance);
    partial void Updatefilms_planet(films_planet instance);
    partial void Deletefilms_planet(films_planet instance);
    partial void Insertfilms_specy(films_specy instance);
    partial void Updatefilms_specy(films_specy instance);
    partial void Deletefilms_specy(films_specy instance);
    partial void Insertfilms_starship(films_starship instance);
    partial void Updatefilms_starship(films_starship instance);
    partial void Deletefilms_starship(films_starship instance);
    partial void Insertfilms_vehicle(films_vehicle instance);
    partial void Updatefilms_vehicle(films_vehicle instance);
    partial void Deletefilms_vehicle(films_vehicle instance);
    partial void Insertpeople(people instance);
    partial void Updatepeople(people instance);
    partial void Deletepeople(people instance);
    partial void Insertplanet(planet instance);
    partial void Updateplanet(planet instance);
    partial void Deleteplanet(planet instance);
    partial void Insertspecy(specy instance);
    partial void Updatespecy(specy instance);
    partial void Deletespecy(specy instance);
    partial void Insertspecies_people(species_people instance);
    partial void Updatespecies_people(species_people instance);
    partial void Deletespecies_people(species_people instance);
    partial void Insertstarship(starship instance);
    partial void Updatestarship(starship instance);
    partial void Deletestarship(starship instance);
    partial void Insertstarships_pilot(starships_pilot instance);
    partial void Updatestarships_pilot(starships_pilot instance);
    partial void Deletestarships_pilot(starships_pilot instance);
    partial void Inserttransport(transport instance);
    partial void Updatetransport(transport instance);
    partial void Deletetransport(transport instance);
    partial void Insertvehicle(vehicle instance);
    partial void Updatevehicle(vehicle instance);
    partial void Deletevehicle(vehicle instance);
    #endregion
		
		public StarWarsClassDataContext() : 
				base(global::StarWars.DAL.Properties.Settings.Default.star_warsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StarWarsClassDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StarWarsClassDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StarWarsClassDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StarWarsClassDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<film> films
		{
			get
			{
				return this.GetTable<film>();
			}
		}
		
		public System.Data.Linq.Table<vehicles_pilot> vehicles_pilots
		{
			get
			{
				return this.GetTable<vehicles_pilot>();
			}
		}
		
		public System.Data.Linq.Table<films_character> films_characters
		{
			get
			{
				return this.GetTable<films_character>();
			}
		}
		
		public System.Data.Linq.Table<films_planet> films_planets
		{
			get
			{
				return this.GetTable<films_planet>();
			}
		}
		
		public System.Data.Linq.Table<films_specy> films_species
		{
			get
			{
				return this.GetTable<films_specy>();
			}
		}
		
		public System.Data.Linq.Table<films_starship> films_starships
		{
			get
			{
				return this.GetTable<films_starship>();
			}
		}
		
		public System.Data.Linq.Table<films_vehicle> films_vehicles
		{
			get
			{
				return this.GetTable<films_vehicle>();
			}
		}
		
		public System.Data.Linq.Table<people> peoples
		{
			get
			{
				return this.GetTable<people>();
			}
		}
		
		public System.Data.Linq.Table<planet> planets
		{
			get
			{
				return this.GetTable<planet>();
			}
		}
		
		public System.Data.Linq.Table<specy> species
		{
			get
			{
				return this.GetTable<specy>();
			}
		}
		
		public System.Data.Linq.Table<species_people> species_peoples
		{
			get
			{
				return this.GetTable<species_people>();
			}
		}
		
		public System.Data.Linq.Table<starship> starships
		{
			get
			{
				return this.GetTable<starship>();
			}
		}
		
		public System.Data.Linq.Table<starships_pilot> starships_pilots
		{
			get
			{
				return this.GetTable<starships_pilot>();
			}
		}
		
		public System.Data.Linq.Table<transport> transports
		{
			get
			{
				return this.GetTable<transport>();
			}
		}
		
		public System.Data.Linq.Table<vehicle> vehicles
		{
			get
			{
				return this.GetTable<vehicle>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.films")]
	public partial class film : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _created;
		
		private string _director;
		
		private System.Nullable<System.DateTime> _edited;
		
		private System.Nullable<int> _episode_id;
		
		private string _opening_crawl;
		
		private string _producer;
		
		private System.Nullable<System.DateTime> _release_date;
		
		private string _title;
		
		private EntitySet<films_character> _films_characters;
		
		private EntitySet<films_planet> _films_planets;
		
		private EntitySet<films_specy> _films_species;
		
		private EntitySet<films_starship> _films_starships;
		
		private EntitySet<films_vehicle> _films_vehicles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    partial void OndirectorChanging(string value);
    partial void OndirectorChanged();
    partial void OneditedChanging(System.Nullable<System.DateTime> value);
    partial void OneditedChanged();
    partial void Onepisode_idChanging(System.Nullable<int> value);
    partial void Onepisode_idChanged();
    partial void Onopening_crawlChanging(string value);
    partial void Onopening_crawlChanged();
    partial void OnproducerChanging(string value);
    partial void OnproducerChanged();
    partial void Onrelease_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onrelease_dateChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    #endregion
		
		public film()
		{
			this._films_characters = new EntitySet<films_character>(new Action<films_character>(this.attach_films_characters), new Action<films_character>(this.detach_films_characters));
			this._films_planets = new EntitySet<films_planet>(new Action<films_planet>(this.attach_films_planets), new Action<films_planet>(this.detach_films_planets));
			this._films_species = new EntitySet<films_specy>(new Action<films_specy>(this.attach_films_species), new Action<films_specy>(this.detach_films_species));
			this._films_starships = new EntitySet<films_starship>(new Action<films_starship>(this.attach_films_starships), new Action<films_starship>(this.detach_films_starships));
			this._films_vehicles = new EntitySet<films_vehicle>(new Action<films_vehicle>(this.attach_films_vehicles), new Action<films_vehicle>(this.detach_films_vehicles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime")]
		public System.Nullable<System.DateTime> created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_director", DbType="NVarChar(MAX)")]
		public string director
		{
			get
			{
				return this._director;
			}
			set
			{
				if ((this._director != value))
				{
					this.OndirectorChanging(value);
					this.SendPropertyChanging();
					this._director = value;
					this.SendPropertyChanged("director");
					this.OndirectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edited", DbType="DateTime")]
		public System.Nullable<System.DateTime> edited
		{
			get
			{
				return this._edited;
			}
			set
			{
				if ((this._edited != value))
				{
					this.OneditedChanging(value);
					this.SendPropertyChanging();
					this._edited = value;
					this.SendPropertyChanged("edited");
					this.OneditedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_episode_id", DbType="Int")]
		public System.Nullable<int> episode_id
		{
			get
			{
				return this._episode_id;
			}
			set
			{
				if ((this._episode_id != value))
				{
					this.Onepisode_idChanging(value);
					this.SendPropertyChanging();
					this._episode_id = value;
					this.SendPropertyChanged("episode_id");
					this.Onepisode_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opening_crawl", DbType="NVarChar(MAX)")]
		public string opening_crawl
		{
			get
			{
				return this._opening_crawl;
			}
			set
			{
				if ((this._opening_crawl != value))
				{
					this.Onopening_crawlChanging(value);
					this.SendPropertyChanging();
					this._opening_crawl = value;
					this.SendPropertyChanged("opening_crawl");
					this.Onopening_crawlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_producer", DbType="NVarChar(MAX)")]
		public string producer
		{
			get
			{
				return this._producer;
			}
			set
			{
				if ((this._producer != value))
				{
					this.OnproducerChanging(value);
					this.SendPropertyChanging();
					this._producer = value;
					this.SendPropertyChanged("producer");
					this.OnproducerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_release_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> release_date
		{
			get
			{
				return this._release_date;
			}
			set
			{
				if ((this._release_date != value))
				{
					this.Onrelease_dateChanging(value);
					this.SendPropertyChanging();
					this._release_date = value;
					this.SendPropertyChanged("release_date");
					this.Onrelease_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(MAX)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="film_films_character", Storage="_films_characters", ThisKey="id", OtherKey="film_id")]
		public EntitySet<films_character> films_characters
		{
			get
			{
				return this._films_characters;
			}
			set
			{
				this._films_characters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="film_films_planet", Storage="_films_planets", ThisKey="id", OtherKey="film_id")]
		public EntitySet<films_planet> films_planets
		{
			get
			{
				return this._films_planets;
			}
			set
			{
				this._films_planets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="film_films_specy", Storage="_films_species", ThisKey="id", OtherKey="film_id")]
		public EntitySet<films_specy> films_species
		{
			get
			{
				return this._films_species;
			}
			set
			{
				this._films_species.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="film_films_starship", Storage="_films_starships", ThisKey="id", OtherKey="film_id")]
		public EntitySet<films_starship> films_starships
		{
			get
			{
				return this._films_starships;
			}
			set
			{
				this._films_starships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="film_films_vehicle", Storage="_films_vehicles", ThisKey="id", OtherKey="film_id")]
		public EntitySet<films_vehicle> films_vehicles
		{
			get
			{
				return this._films_vehicles;
			}
			set
			{
				this._films_vehicles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_films_characters(films_character entity)
		{
			this.SendPropertyChanging();
			entity.film = this;
		}
		
		private void detach_films_characters(films_character entity)
		{
			this.SendPropertyChanging();
			entity.film = null;
		}
		
		private void attach_films_planets(films_planet entity)
		{
			this.SendPropertyChanging();
			entity.film = this;
		}
		
		private void detach_films_planets(films_planet entity)
		{
			this.SendPropertyChanging();
			entity.film = null;
		}
		
		private void attach_films_species(films_specy entity)
		{
			this.SendPropertyChanging();
			entity.film = this;
		}
		
		private void detach_films_species(films_specy entity)
		{
			this.SendPropertyChanging();
			entity.film = null;
		}
		
		private void attach_films_starships(films_starship entity)
		{
			this.SendPropertyChanging();
			entity.film = this;
		}
		
		private void detach_films_starships(films_starship entity)
		{
			this.SendPropertyChanging();
			entity.film = null;
		}
		
		private void attach_films_vehicles(films_vehicle entity)
		{
			this.SendPropertyChanging();
			entity.film = this;
		}
		
		private void detach_films_vehicles(films_vehicle entity)
		{
			this.SendPropertyChanging();
			entity.film = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vehicles_pilots")]
	public partial class vehicles_pilot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _vehicle_id;
		
		private int _people_id;
		
		private EntityRef<people> _people;
		
		private EntityRef<vehicle> _vehicle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvehicle_idChanging(int value);
    partial void Onvehicle_idChanged();
    partial void Onpeople_idChanging(int value);
    partial void Onpeople_idChanged();
    #endregion
		
		public vehicles_pilot()
		{
			this._people = default(EntityRef<people>);
			this._vehicle = default(EntityRef<vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int vehicle_id
		{
			get
			{
				return this._vehicle_id;
			}
			set
			{
				if ((this._vehicle_id != value))
				{
					if (this._vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvehicle_idChanging(value);
					this.SendPropertyChanging();
					this._vehicle_id = value;
					this.SendPropertyChanged("vehicle_id");
					this.Onvehicle_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_people_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int people_id
		{
			get
			{
				return this._people_id;
			}
			set
			{
				if ((this._people_id != value))
				{
					if (this._people.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpeople_idChanging(value);
					this.SendPropertyChanging();
					this._people_id = value;
					this.SendPropertyChanged("people_id");
					this.Onpeople_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="people_vehicles_pilot", Storage="_people", ThisKey="people_id", OtherKey="id", IsForeignKey=true)]
		public people people
		{
			get
			{
				return this._people.Entity;
			}
			set
			{
				people previousValue = this._people.Entity;
				if (((previousValue != value) 
							|| (this._people.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._people.Entity = null;
						previousValue.vehicles_pilots.Remove(this);
					}
					this._people.Entity = value;
					if ((value != null))
					{
						value.vehicles_pilots.Add(this);
						this._people_id = value.id;
					}
					else
					{
						this._people_id = default(int);
					}
					this.SendPropertyChanged("people");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vehicle_vehicles_pilot", Storage="_vehicle", ThisKey="vehicle_id", OtherKey="id", IsForeignKey=true)]
		public vehicle vehicle
		{
			get
			{
				return this._vehicle.Entity;
			}
			set
			{
				vehicle previousValue = this._vehicle.Entity;
				if (((previousValue != value) 
							|| (this._vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._vehicle.Entity = null;
						previousValue.vehicles_pilots.Remove(this);
					}
					this._vehicle.Entity = value;
					if ((value != null))
					{
						value.vehicles_pilots.Add(this);
						this._vehicle_id = value.id;
					}
					else
					{
						this._vehicle_id = default(int);
					}
					this.SendPropertyChanged("vehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.films_characters")]
	public partial class films_character : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _film_id;
		
		private int _people_id;
		
		private EntityRef<film> _film;
		
		private EntityRef<people> _people;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfilm_idChanging(int value);
    partial void Onfilm_idChanged();
    partial void Onpeople_idChanging(int value);
    partial void Onpeople_idChanged();
    #endregion
		
		public films_character()
		{
			this._film = default(EntityRef<film>);
			this._people = default(EntityRef<people>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_film_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int film_id
		{
			get
			{
				return this._film_id;
			}
			set
			{
				if ((this._film_id != value))
				{
					if (this._film.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfilm_idChanging(value);
					this.SendPropertyChanging();
					this._film_id = value;
					this.SendPropertyChanged("film_id");
					this.Onfilm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_people_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int people_id
		{
			get
			{
				return this._people_id;
			}
			set
			{
				if ((this._people_id != value))
				{
					if (this._people.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpeople_idChanging(value);
					this.SendPropertyChanging();
					this._people_id = value;
					this.SendPropertyChanged("people_id");
					this.Onpeople_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="film_films_character", Storage="_film", ThisKey="film_id", OtherKey="id", IsForeignKey=true)]
		public film film
		{
			get
			{
				return this._film.Entity;
			}
			set
			{
				film previousValue = this._film.Entity;
				if (((previousValue != value) 
							|| (this._film.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._film.Entity = null;
						previousValue.films_characters.Remove(this);
					}
					this._film.Entity = value;
					if ((value != null))
					{
						value.films_characters.Add(this);
						this._film_id = value.id;
					}
					else
					{
						this._film_id = default(int);
					}
					this.SendPropertyChanged("film");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="people_films_character", Storage="_people", ThisKey="people_id", OtherKey="id", IsForeignKey=true)]
		public people people
		{
			get
			{
				return this._people.Entity;
			}
			set
			{
				people previousValue = this._people.Entity;
				if (((previousValue != value) 
							|| (this._people.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._people.Entity = null;
						previousValue.films_characters.Remove(this);
					}
					this._people.Entity = value;
					if ((value != null))
					{
						value.films_characters.Add(this);
						this._people_id = value.id;
					}
					else
					{
						this._people_id = default(int);
					}
					this.SendPropertyChanged("people");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.films_planets")]
	public partial class films_planet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _film_id;
		
		private int _planet_id;
		
		private EntityRef<film> _film;
		
		private EntityRef<planet> _planet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfilm_idChanging(int value);
    partial void Onfilm_idChanged();
    partial void Onplanet_idChanging(int value);
    partial void Onplanet_idChanged();
    #endregion
		
		public films_planet()
		{
			this._film = default(EntityRef<film>);
			this._planet = default(EntityRef<planet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_film_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int film_id
		{
			get
			{
				return this._film_id;
			}
			set
			{
				if ((this._film_id != value))
				{
					if (this._film.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfilm_idChanging(value);
					this.SendPropertyChanging();
					this._film_id = value;
					this.SendPropertyChanged("film_id");
					this.Onfilm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_planet_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int planet_id
		{
			get
			{
				return this._planet_id;
			}
			set
			{
				if ((this._planet_id != value))
				{
					if (this._planet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onplanet_idChanging(value);
					this.SendPropertyChanging();
					this._planet_id = value;
					this.SendPropertyChanged("planet_id");
					this.Onplanet_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="film_films_planet", Storage="_film", ThisKey="film_id", OtherKey="id", IsForeignKey=true)]
		public film film
		{
			get
			{
				return this._film.Entity;
			}
			set
			{
				film previousValue = this._film.Entity;
				if (((previousValue != value) 
							|| (this._film.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._film.Entity = null;
						previousValue.films_planets.Remove(this);
					}
					this._film.Entity = value;
					if ((value != null))
					{
						value.films_planets.Add(this);
						this._film_id = value.id;
					}
					else
					{
						this._film_id = default(int);
					}
					this.SendPropertyChanged("film");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="planet_films_planet", Storage="_planet", ThisKey="planet_id", OtherKey="id", IsForeignKey=true)]
		public planet planet
		{
			get
			{
				return this._planet.Entity;
			}
			set
			{
				planet previousValue = this._planet.Entity;
				if (((previousValue != value) 
							|| (this._planet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._planet.Entity = null;
						previousValue.films_planets.Remove(this);
					}
					this._planet.Entity = value;
					if ((value != null))
					{
						value.films_planets.Add(this);
						this._planet_id = value.id;
					}
					else
					{
						this._planet_id = default(int);
					}
					this.SendPropertyChanged("planet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.films_species")]
	public partial class films_specy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _film_id;
		
		private int _species_id;
		
		private EntityRef<film> _film;
		
		private EntityRef<specy> _specy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfilm_idChanging(int value);
    partial void Onfilm_idChanged();
    partial void Onspecies_idChanging(int value);
    partial void Onspecies_idChanged();
    #endregion
		
		public films_specy()
		{
			this._film = default(EntityRef<film>);
			this._specy = default(EntityRef<specy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_film_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int film_id
		{
			get
			{
				return this._film_id;
			}
			set
			{
				if ((this._film_id != value))
				{
					if (this._film.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfilm_idChanging(value);
					this.SendPropertyChanging();
					this._film_id = value;
					this.SendPropertyChanged("film_id");
					this.Onfilm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_species_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int species_id
		{
			get
			{
				return this._species_id;
			}
			set
			{
				if ((this._species_id != value))
				{
					if (this._specy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onspecies_idChanging(value);
					this.SendPropertyChanging();
					this._species_id = value;
					this.SendPropertyChanged("species_id");
					this.Onspecies_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="film_films_specy", Storage="_film", ThisKey="film_id", OtherKey="id", IsForeignKey=true)]
		public film film
		{
			get
			{
				return this._film.Entity;
			}
			set
			{
				film previousValue = this._film.Entity;
				if (((previousValue != value) 
							|| (this._film.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._film.Entity = null;
						previousValue.films_species.Remove(this);
					}
					this._film.Entity = value;
					if ((value != null))
					{
						value.films_species.Add(this);
						this._film_id = value.id;
					}
					else
					{
						this._film_id = default(int);
					}
					this.SendPropertyChanged("film");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="specy_films_specy", Storage="_specy", ThisKey="species_id", OtherKey="id", IsForeignKey=true)]
		public specy specy
		{
			get
			{
				return this._specy.Entity;
			}
			set
			{
				specy previousValue = this._specy.Entity;
				if (((previousValue != value) 
							|| (this._specy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._specy.Entity = null;
						previousValue.films_species.Remove(this);
					}
					this._specy.Entity = value;
					if ((value != null))
					{
						value.films_species.Add(this);
						this._species_id = value.id;
					}
					else
					{
						this._species_id = default(int);
					}
					this.SendPropertyChanged("specy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.films_starships")]
	public partial class films_starship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _film_id;
		
		private int _starship_id;
		
		private EntityRef<film> _film;
		
		private EntityRef<starship> _starship;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfilm_idChanging(int value);
    partial void Onfilm_idChanged();
    partial void Onstarship_idChanging(int value);
    partial void Onstarship_idChanged();
    #endregion
		
		public films_starship()
		{
			this._film = default(EntityRef<film>);
			this._starship = default(EntityRef<starship>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_film_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int film_id
		{
			get
			{
				return this._film_id;
			}
			set
			{
				if ((this._film_id != value))
				{
					if (this._film.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfilm_idChanging(value);
					this.SendPropertyChanging();
					this._film_id = value;
					this.SendPropertyChanged("film_id");
					this.Onfilm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_starship_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int starship_id
		{
			get
			{
				return this._starship_id;
			}
			set
			{
				if ((this._starship_id != value))
				{
					if (this._starship.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstarship_idChanging(value);
					this.SendPropertyChanging();
					this._starship_id = value;
					this.SendPropertyChanged("starship_id");
					this.Onstarship_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="film_films_starship", Storage="_film", ThisKey="film_id", OtherKey="id", IsForeignKey=true)]
		public film film
		{
			get
			{
				return this._film.Entity;
			}
			set
			{
				film previousValue = this._film.Entity;
				if (((previousValue != value) 
							|| (this._film.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._film.Entity = null;
						previousValue.films_starships.Remove(this);
					}
					this._film.Entity = value;
					if ((value != null))
					{
						value.films_starships.Add(this);
						this._film_id = value.id;
					}
					else
					{
						this._film_id = default(int);
					}
					this.SendPropertyChanged("film");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="starship_films_starship", Storage="_starship", ThisKey="starship_id", OtherKey="id", IsForeignKey=true)]
		public starship starship
		{
			get
			{
				return this._starship.Entity;
			}
			set
			{
				starship previousValue = this._starship.Entity;
				if (((previousValue != value) 
							|| (this._starship.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._starship.Entity = null;
						previousValue.films_starships.Remove(this);
					}
					this._starship.Entity = value;
					if ((value != null))
					{
						value.films_starships.Add(this);
						this._starship_id = value.id;
					}
					else
					{
						this._starship_id = default(int);
					}
					this.SendPropertyChanged("starship");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.films_vehicles")]
	public partial class films_vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _film_id;
		
		private int _vehicle_id;
		
		private EntityRef<film> _film;
		
		private EntityRef<vehicle> _vehicle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfilm_idChanging(int value);
    partial void Onfilm_idChanged();
    partial void Onvehicle_idChanging(int value);
    partial void Onvehicle_idChanged();
    #endregion
		
		public films_vehicle()
		{
			this._film = default(EntityRef<film>);
			this._vehicle = default(EntityRef<vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_film_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int film_id
		{
			get
			{
				return this._film_id;
			}
			set
			{
				if ((this._film_id != value))
				{
					if (this._film.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfilm_idChanging(value);
					this.SendPropertyChanging();
					this._film_id = value;
					this.SendPropertyChanged("film_id");
					this.Onfilm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int vehicle_id
		{
			get
			{
				return this._vehicle_id;
			}
			set
			{
				if ((this._vehicle_id != value))
				{
					if (this._vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvehicle_idChanging(value);
					this.SendPropertyChanging();
					this._vehicle_id = value;
					this.SendPropertyChanged("vehicle_id");
					this.Onvehicle_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="film_films_vehicle", Storage="_film", ThisKey="film_id", OtherKey="id", IsForeignKey=true)]
		public film film
		{
			get
			{
				return this._film.Entity;
			}
			set
			{
				film previousValue = this._film.Entity;
				if (((previousValue != value) 
							|| (this._film.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._film.Entity = null;
						previousValue.films_vehicles.Remove(this);
					}
					this._film.Entity = value;
					if ((value != null))
					{
						value.films_vehicles.Add(this);
						this._film_id = value.id;
					}
					else
					{
						this._film_id = default(int);
					}
					this.SendPropertyChanged("film");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vehicle_films_vehicle", Storage="_vehicle", ThisKey="vehicle_id", OtherKey="id", IsForeignKey=true)]
		public vehicle vehicle
		{
			get
			{
				return this._vehicle.Entity;
			}
			set
			{
				vehicle previousValue = this._vehicle.Entity;
				if (((previousValue != value) 
							|| (this._vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._vehicle.Entity = null;
						previousValue.films_vehicles.Remove(this);
					}
					this._vehicle.Entity = value;
					if ((value != null))
					{
						value.films_vehicles.Add(this);
						this._vehicle_id = value.id;
					}
					else
					{
						this._vehicle_id = default(int);
					}
					this.SendPropertyChanged("vehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.people")]
	public partial class people : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _birth_year;
		
		private System.Nullable<System.DateTime> _created;
		
		private System.Nullable<System.DateTime> _edited;
		
		private string _eye_color;
		
		private string _gender;
		
		private string _hair_color;
		
		private string _height;
		
		private System.Nullable<int> _homeworld;
		
		private string _mass;
		
		private string _name;
		
		private string _skin_color;
		
		private EntitySet<vehicles_pilot> _vehicles_pilots;
		
		private EntitySet<films_character> _films_characters;
		
		private EntitySet<species_people> _species_peoples;
		
		private EntitySet<starships_pilot> _starships_pilots;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onbirth_yearChanging(string value);
    partial void Onbirth_yearChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    partial void OneditedChanging(System.Nullable<System.DateTime> value);
    partial void OneditedChanged();
    partial void Oneye_colorChanging(string value);
    partial void Oneye_colorChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void Onhair_colorChanging(string value);
    partial void Onhair_colorChanged();
    partial void OnheightChanging(string value);
    partial void OnheightChanged();
    partial void OnhomeworldChanging(System.Nullable<int> value);
    partial void OnhomeworldChanged();
    partial void OnmassChanging(string value);
    partial void OnmassChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onskin_colorChanging(string value);
    partial void Onskin_colorChanged();
    #endregion
		
		public people()
		{
			this._vehicles_pilots = new EntitySet<vehicles_pilot>(new Action<vehicles_pilot>(this.attach_vehicles_pilots), new Action<vehicles_pilot>(this.detach_vehicles_pilots));
			this._films_characters = new EntitySet<films_character>(new Action<films_character>(this.attach_films_characters), new Action<films_character>(this.detach_films_characters));
			this._species_peoples = new EntitySet<species_people>(new Action<species_people>(this.attach_species_peoples), new Action<species_people>(this.detach_species_peoples));
			this._starships_pilots = new EntitySet<starships_pilot>(new Action<starships_pilot>(this.attach_starships_pilots), new Action<starships_pilot>(this.detach_starships_pilots));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birth_year", DbType="NVarChar(MAX)")]
		public string birth_year
		{
			get
			{
				return this._birth_year;
			}
			set
			{
				if ((this._birth_year != value))
				{
					this.Onbirth_yearChanging(value);
					this.SendPropertyChanging();
					this._birth_year = value;
					this.SendPropertyChanged("birth_year");
					this.Onbirth_yearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime")]
		public System.Nullable<System.DateTime> created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edited", DbType="DateTime")]
		public System.Nullable<System.DateTime> edited
		{
			get
			{
				return this._edited;
			}
			set
			{
				if ((this._edited != value))
				{
					this.OneditedChanging(value);
					this.SendPropertyChanging();
					this._edited = value;
					this.SendPropertyChanged("edited");
					this.OneditedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eye_color", DbType="NVarChar(MAX)")]
		public string eye_color
		{
			get
			{
				return this._eye_color;
			}
			set
			{
				if ((this._eye_color != value))
				{
					this.Oneye_colorChanging(value);
					this.SendPropertyChanging();
					this._eye_color = value;
					this.SendPropertyChanged("eye_color");
					this.Oneye_colorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="NVarChar(MAX)")]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hair_color", DbType="NVarChar(MAX)")]
		public string hair_color
		{
			get
			{
				return this._hair_color;
			}
			set
			{
				if ((this._hair_color != value))
				{
					this.Onhair_colorChanging(value);
					this.SendPropertyChanging();
					this._hair_color = value;
					this.SendPropertyChanged("hair_color");
					this.Onhair_colorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_height", DbType="NVarChar(MAX)")]
		public string height
		{
			get
			{
				return this._height;
			}
			set
			{
				if ((this._height != value))
				{
					this.OnheightChanging(value);
					this.SendPropertyChanging();
					this._height = value;
					this.SendPropertyChanged("height");
					this.OnheightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_homeworld", DbType="Int")]
		public System.Nullable<int> homeworld
		{
			get
			{
				return this._homeworld;
			}
			set
			{
				if ((this._homeworld != value))
				{
					this.OnhomeworldChanging(value);
					this.SendPropertyChanging();
					this._homeworld = value;
					this.SendPropertyChanged("homeworld");
					this.OnhomeworldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mass", DbType="NVarChar(MAX)")]
		public string mass
		{
			get
			{
				return this._mass;
			}
			set
			{
				if ((this._mass != value))
				{
					this.OnmassChanging(value);
					this.SendPropertyChanging();
					this._mass = value;
					this.SendPropertyChanged("mass");
					this.OnmassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skin_color", DbType="NVarChar(MAX)")]
		public string skin_color
		{
			get
			{
				return this._skin_color;
			}
			set
			{
				if ((this._skin_color != value))
				{
					this.Onskin_colorChanging(value);
					this.SendPropertyChanging();
					this._skin_color = value;
					this.SendPropertyChanged("skin_color");
					this.Onskin_colorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="people_vehicles_pilot", Storage="_vehicles_pilots", ThisKey="id", OtherKey="people_id")]
		public EntitySet<vehicles_pilot> vehicles_pilots
		{
			get
			{
				return this._vehicles_pilots;
			}
			set
			{
				this._vehicles_pilots.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="people_films_character", Storage="_films_characters", ThisKey="id", OtherKey="people_id")]
		public EntitySet<films_character> films_characters
		{
			get
			{
				return this._films_characters;
			}
			set
			{
				this._films_characters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="people_species_people", Storage="_species_peoples", ThisKey="id", OtherKey="people_id")]
		public EntitySet<species_people> species_peoples
		{
			get
			{
				return this._species_peoples;
			}
			set
			{
				this._species_peoples.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="people_starships_pilot", Storage="_starships_pilots", ThisKey="id", OtherKey="people_id")]
		public EntitySet<starships_pilot> starships_pilots
		{
			get
			{
				return this._starships_pilots;
			}
			set
			{
				this._starships_pilots.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_vehicles_pilots(vehicles_pilot entity)
		{
			this.SendPropertyChanging();
			entity.people = this;
		}
		
		private void detach_vehicles_pilots(vehicles_pilot entity)
		{
			this.SendPropertyChanging();
			entity.people = null;
		}
		
		private void attach_films_characters(films_character entity)
		{
			this.SendPropertyChanging();
			entity.people = this;
		}
		
		private void detach_films_characters(films_character entity)
		{
			this.SendPropertyChanging();
			entity.people = null;
		}
		
		private void attach_species_peoples(species_people entity)
		{
			this.SendPropertyChanging();
			entity.people = this;
		}
		
		private void detach_species_peoples(species_people entity)
		{
			this.SendPropertyChanging();
			entity.people = null;
		}
		
		private void attach_starships_pilots(starships_pilot entity)
		{
			this.SendPropertyChanging();
			entity.people = this;
		}
		
		private void detach_starships_pilots(starships_pilot entity)
		{
			this.SendPropertyChanging();
			entity.people = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.planets")]
	public partial class planet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _climate;
		
		private System.Nullable<System.DateTime> _created;
		
		private string _diameter;
		
		private System.Nullable<System.DateTime> _edited;
		
		private string _gravity;
		
		private string _name;
		
		private string _orbital_period;
		
		private string _population;
		
		private string _rotation_period;
		
		private string _surface_water;
		
		private string _terrain;
		
		private EntitySet<films_planet> _films_planets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnclimateChanging(string value);
    partial void OnclimateChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    partial void OndiameterChanging(string value);
    partial void OndiameterChanged();
    partial void OneditedChanging(System.Nullable<System.DateTime> value);
    partial void OneditedChanged();
    partial void OngravityChanging(string value);
    partial void OngravityChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onorbital_periodChanging(string value);
    partial void Onorbital_periodChanged();
    partial void OnpopulationChanging(string value);
    partial void OnpopulationChanged();
    partial void Onrotation_periodChanging(string value);
    partial void Onrotation_periodChanged();
    partial void Onsurface_waterChanging(string value);
    partial void Onsurface_waterChanged();
    partial void OnterrainChanging(string value);
    partial void OnterrainChanged();
    #endregion
		
		public planet()
		{
			this._films_planets = new EntitySet<films_planet>(new Action<films_planet>(this.attach_films_planets), new Action<films_planet>(this.detach_films_planets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_climate", DbType="NVarChar(MAX)")]
		public string climate
		{
			get
			{
				return this._climate;
			}
			set
			{
				if ((this._climate != value))
				{
					this.OnclimateChanging(value);
					this.SendPropertyChanging();
					this._climate = value;
					this.SendPropertyChanged("climate");
					this.OnclimateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime")]
		public System.Nullable<System.DateTime> created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diameter", DbType="NVarChar(MAX)")]
		public string diameter
		{
			get
			{
				return this._diameter;
			}
			set
			{
				if ((this._diameter != value))
				{
					this.OndiameterChanging(value);
					this.SendPropertyChanging();
					this._diameter = value;
					this.SendPropertyChanged("diameter");
					this.OndiameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edited", DbType="DateTime")]
		public System.Nullable<System.DateTime> edited
		{
			get
			{
				return this._edited;
			}
			set
			{
				if ((this._edited != value))
				{
					this.OneditedChanging(value);
					this.SendPropertyChanging();
					this._edited = value;
					this.SendPropertyChanged("edited");
					this.OneditedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gravity", DbType="NVarChar(MAX)")]
		public string gravity
		{
			get
			{
				return this._gravity;
			}
			set
			{
				if ((this._gravity != value))
				{
					this.OngravityChanging(value);
					this.SendPropertyChanging();
					this._gravity = value;
					this.SendPropertyChanged("gravity");
					this.OngravityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orbital_period", DbType="NVarChar(MAX)")]
		public string orbital_period
		{
			get
			{
				return this._orbital_period;
			}
			set
			{
				if ((this._orbital_period != value))
				{
					this.Onorbital_periodChanging(value);
					this.SendPropertyChanging();
					this._orbital_period = value;
					this.SendPropertyChanged("orbital_period");
					this.Onorbital_periodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_population", DbType="NVarChar(MAX)")]
		public string population
		{
			get
			{
				return this._population;
			}
			set
			{
				if ((this._population != value))
				{
					this.OnpopulationChanging(value);
					this.SendPropertyChanging();
					this._population = value;
					this.SendPropertyChanged("population");
					this.OnpopulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rotation_period", DbType="NVarChar(MAX)")]
		public string rotation_period
		{
			get
			{
				return this._rotation_period;
			}
			set
			{
				if ((this._rotation_period != value))
				{
					this.Onrotation_periodChanging(value);
					this.SendPropertyChanging();
					this._rotation_period = value;
					this.SendPropertyChanged("rotation_period");
					this.Onrotation_periodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_surface_water", DbType="NVarChar(MAX)")]
		public string surface_water
		{
			get
			{
				return this._surface_water;
			}
			set
			{
				if ((this._surface_water != value))
				{
					this.Onsurface_waterChanging(value);
					this.SendPropertyChanging();
					this._surface_water = value;
					this.SendPropertyChanged("surface_water");
					this.Onsurface_waterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_terrain", DbType="NVarChar(MAX)")]
		public string terrain
		{
			get
			{
				return this._terrain;
			}
			set
			{
				if ((this._terrain != value))
				{
					this.OnterrainChanging(value);
					this.SendPropertyChanging();
					this._terrain = value;
					this.SendPropertyChanged("terrain");
					this.OnterrainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="planet_films_planet", Storage="_films_planets", ThisKey="id", OtherKey="planet_id")]
		public EntitySet<films_planet> films_planets
		{
			get
			{
				return this._films_planets;
			}
			set
			{
				this._films_planets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_films_planets(films_planet entity)
		{
			this.SendPropertyChanging();
			entity.planet = this;
		}
		
		private void detach_films_planets(films_planet entity)
		{
			this.SendPropertyChanging();
			entity.planet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.species")]
	public partial class specy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _average_height;
		
		private string _average_lifespan;
		
		private string _classification;
		
		private System.Nullable<System.DateTime> _created;
		
		private string _designation;
		
		private System.Nullable<System.DateTime> _edited;
		
		private string _eye_colors;
		
		private string _hair_colors;
		
		private System.Nullable<int> _homeworld;
		
		private string _language;
		
		private string _name;
		
		private string _skin_colors;
		
		private EntitySet<films_specy> _films_species;
		
		private EntitySet<species_people> _species_peoples;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onaverage_heightChanging(string value);
    partial void Onaverage_heightChanged();
    partial void Onaverage_lifespanChanging(string value);
    partial void Onaverage_lifespanChanged();
    partial void OnclassificationChanging(string value);
    partial void OnclassificationChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    partial void OndesignationChanging(string value);
    partial void OndesignationChanged();
    partial void OneditedChanging(System.Nullable<System.DateTime> value);
    partial void OneditedChanged();
    partial void Oneye_colorsChanging(string value);
    partial void Oneye_colorsChanged();
    partial void Onhair_colorsChanging(string value);
    partial void Onhair_colorsChanged();
    partial void OnhomeworldChanging(System.Nullable<int> value);
    partial void OnhomeworldChanged();
    partial void OnlanguageChanging(string value);
    partial void OnlanguageChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onskin_colorsChanging(string value);
    partial void Onskin_colorsChanged();
    #endregion
		
		public specy()
		{
			this._films_species = new EntitySet<films_specy>(new Action<films_specy>(this.attach_films_species), new Action<films_specy>(this.detach_films_species));
			this._species_peoples = new EntitySet<species_people>(new Action<species_people>(this.attach_species_peoples), new Action<species_people>(this.detach_species_peoples));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_average_height", DbType="NVarChar(MAX)")]
		public string average_height
		{
			get
			{
				return this._average_height;
			}
			set
			{
				if ((this._average_height != value))
				{
					this.Onaverage_heightChanging(value);
					this.SendPropertyChanging();
					this._average_height = value;
					this.SendPropertyChanged("average_height");
					this.Onaverage_heightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_average_lifespan", DbType="NVarChar(MAX)")]
		public string average_lifespan
		{
			get
			{
				return this._average_lifespan;
			}
			set
			{
				if ((this._average_lifespan != value))
				{
					this.Onaverage_lifespanChanging(value);
					this.SendPropertyChanging();
					this._average_lifespan = value;
					this.SendPropertyChanged("average_lifespan");
					this.Onaverage_lifespanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classification", DbType="NVarChar(MAX)")]
		public string classification
		{
			get
			{
				return this._classification;
			}
			set
			{
				if ((this._classification != value))
				{
					this.OnclassificationChanging(value);
					this.SendPropertyChanging();
					this._classification = value;
					this.SendPropertyChanged("classification");
					this.OnclassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime")]
		public System.Nullable<System.DateTime> created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_designation", DbType="NVarChar(MAX)")]
		public string designation
		{
			get
			{
				return this._designation;
			}
			set
			{
				if ((this._designation != value))
				{
					this.OndesignationChanging(value);
					this.SendPropertyChanging();
					this._designation = value;
					this.SendPropertyChanged("designation");
					this.OndesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edited", DbType="DateTime")]
		public System.Nullable<System.DateTime> edited
		{
			get
			{
				return this._edited;
			}
			set
			{
				if ((this._edited != value))
				{
					this.OneditedChanging(value);
					this.SendPropertyChanging();
					this._edited = value;
					this.SendPropertyChanged("edited");
					this.OneditedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eye_colors", DbType="NVarChar(MAX)")]
		public string eye_colors
		{
			get
			{
				return this._eye_colors;
			}
			set
			{
				if ((this._eye_colors != value))
				{
					this.Oneye_colorsChanging(value);
					this.SendPropertyChanging();
					this._eye_colors = value;
					this.SendPropertyChanged("eye_colors");
					this.Oneye_colorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hair_colors", DbType="NVarChar(MAX)")]
		public string hair_colors
		{
			get
			{
				return this._hair_colors;
			}
			set
			{
				if ((this._hair_colors != value))
				{
					this.Onhair_colorsChanging(value);
					this.SendPropertyChanging();
					this._hair_colors = value;
					this.SendPropertyChanged("hair_colors");
					this.Onhair_colorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_homeworld", DbType="Int")]
		public System.Nullable<int> homeworld
		{
			get
			{
				return this._homeworld;
			}
			set
			{
				if ((this._homeworld != value))
				{
					this.OnhomeworldChanging(value);
					this.SendPropertyChanging();
					this._homeworld = value;
					this.SendPropertyChanged("homeworld");
					this.OnhomeworldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_language", DbType="NVarChar(MAX)")]
		public string language
		{
			get
			{
				return this._language;
			}
			set
			{
				if ((this._language != value))
				{
					this.OnlanguageChanging(value);
					this.SendPropertyChanging();
					this._language = value;
					this.SendPropertyChanged("language");
					this.OnlanguageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skin_colors", DbType="NVarChar(MAX)")]
		public string skin_colors
		{
			get
			{
				return this._skin_colors;
			}
			set
			{
				if ((this._skin_colors != value))
				{
					this.Onskin_colorsChanging(value);
					this.SendPropertyChanging();
					this._skin_colors = value;
					this.SendPropertyChanged("skin_colors");
					this.Onskin_colorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="specy_films_specy", Storage="_films_species", ThisKey="id", OtherKey="species_id")]
		public EntitySet<films_specy> films_species
		{
			get
			{
				return this._films_species;
			}
			set
			{
				this._films_species.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="specy_species_people", Storage="_species_peoples", ThisKey="id", OtherKey="species_id")]
		public EntitySet<species_people> species_peoples
		{
			get
			{
				return this._species_peoples;
			}
			set
			{
				this._species_peoples.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_films_species(films_specy entity)
		{
			this.SendPropertyChanging();
			entity.specy = this;
		}
		
		private void detach_films_species(films_specy entity)
		{
			this.SendPropertyChanging();
			entity.specy = null;
		}
		
		private void attach_species_peoples(species_people entity)
		{
			this.SendPropertyChanging();
			entity.specy = this;
		}
		
		private void detach_species_peoples(species_people entity)
		{
			this.SendPropertyChanging();
			entity.specy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.species_people")]
	public partial class species_people : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _species_id;
		
		private int _people_id;
		
		private EntityRef<specy> _specy;
		
		private EntityRef<people> _people;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onspecies_idChanging(int value);
    partial void Onspecies_idChanged();
    partial void Onpeople_idChanging(int value);
    partial void Onpeople_idChanged();
    #endregion
		
		public species_people()
		{
			this._specy = default(EntityRef<specy>);
			this._people = default(EntityRef<people>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_species_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int species_id
		{
			get
			{
				return this._species_id;
			}
			set
			{
				if ((this._species_id != value))
				{
					if (this._specy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onspecies_idChanging(value);
					this.SendPropertyChanging();
					this._species_id = value;
					this.SendPropertyChanged("species_id");
					this.Onspecies_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_people_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int people_id
		{
			get
			{
				return this._people_id;
			}
			set
			{
				if ((this._people_id != value))
				{
					if (this._people.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpeople_idChanging(value);
					this.SendPropertyChanging();
					this._people_id = value;
					this.SendPropertyChanged("people_id");
					this.Onpeople_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="specy_species_people", Storage="_specy", ThisKey="species_id", OtherKey="id", IsForeignKey=true)]
		public specy specy
		{
			get
			{
				return this._specy.Entity;
			}
			set
			{
				specy previousValue = this._specy.Entity;
				if (((previousValue != value) 
							|| (this._specy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._specy.Entity = null;
						previousValue.species_peoples.Remove(this);
					}
					this._specy.Entity = value;
					if ((value != null))
					{
						value.species_peoples.Add(this);
						this._species_id = value.id;
					}
					else
					{
						this._species_id = default(int);
					}
					this.SendPropertyChanged("specy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="people_species_people", Storage="_people", ThisKey="people_id", OtherKey="id", IsForeignKey=true)]
		public people people
		{
			get
			{
				return this._people.Entity;
			}
			set
			{
				people previousValue = this._people.Entity;
				if (((previousValue != value) 
							|| (this._people.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._people.Entity = null;
						previousValue.species_peoples.Remove(this);
					}
					this._people.Entity = value;
					if ((value != null))
					{
						value.species_peoples.Add(this);
						this._people_id = value.id;
					}
					else
					{
						this._people_id = default(int);
					}
					this.SendPropertyChanged("people");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.starships")]
	public partial class starship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _MGLT;
		
		private string _hyperdrive_rating;
		
		private string _starship_class;
		
		private EntitySet<films_starship> _films_starships;
		
		private EntitySet<starships_pilot> _starships_pilots;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnMGLTChanging(string value);
    partial void OnMGLTChanged();
    partial void Onhyperdrive_ratingChanging(string value);
    partial void Onhyperdrive_ratingChanged();
    partial void Onstarship_classChanging(string value);
    partial void Onstarship_classChanged();
    #endregion
		
		public starship()
		{
			this._films_starships = new EntitySet<films_starship>(new Action<films_starship>(this.attach_films_starships), new Action<films_starship>(this.detach_films_starships));
			this._starships_pilots = new EntitySet<starships_pilot>(new Action<starships_pilot>(this.attach_starships_pilots), new Action<starships_pilot>(this.detach_starships_pilots));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MGLT", DbType="NVarChar(MAX)")]
		public string MGLT
		{
			get
			{
				return this._MGLT;
			}
			set
			{
				if ((this._MGLT != value))
				{
					this.OnMGLTChanging(value);
					this.SendPropertyChanging();
					this._MGLT = value;
					this.SendPropertyChanged("MGLT");
					this.OnMGLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hyperdrive_rating", DbType="NVarChar(MAX)")]
		public string hyperdrive_rating
		{
			get
			{
				return this._hyperdrive_rating;
			}
			set
			{
				if ((this._hyperdrive_rating != value))
				{
					this.Onhyperdrive_ratingChanging(value);
					this.SendPropertyChanging();
					this._hyperdrive_rating = value;
					this.SendPropertyChanged("hyperdrive_rating");
					this.Onhyperdrive_ratingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_starship_class", DbType="NVarChar(MAX)")]
		public string starship_class
		{
			get
			{
				return this._starship_class;
			}
			set
			{
				if ((this._starship_class != value))
				{
					this.Onstarship_classChanging(value);
					this.SendPropertyChanging();
					this._starship_class = value;
					this.SendPropertyChanged("starship_class");
					this.Onstarship_classChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="starship_films_starship", Storage="_films_starships", ThisKey="id", OtherKey="starship_id")]
		public EntitySet<films_starship> films_starships
		{
			get
			{
				return this._films_starships;
			}
			set
			{
				this._films_starships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="starship_starships_pilot", Storage="_starships_pilots", ThisKey="id", OtherKey="starship_id")]
		public EntitySet<starships_pilot> starships_pilots
		{
			get
			{
				return this._starships_pilots;
			}
			set
			{
				this._starships_pilots.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_films_starships(films_starship entity)
		{
			this.SendPropertyChanging();
			entity.starship = this;
		}
		
		private void detach_films_starships(films_starship entity)
		{
			this.SendPropertyChanging();
			entity.starship = null;
		}
		
		private void attach_starships_pilots(starships_pilot entity)
		{
			this.SendPropertyChanging();
			entity.starship = this;
		}
		
		private void detach_starships_pilots(starships_pilot entity)
		{
			this.SendPropertyChanging();
			entity.starship = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.starships_pilots")]
	public partial class starships_pilot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _starship_id;
		
		private int _people_id;
		
		private EntityRef<starship> _starship;
		
		private EntityRef<people> _people;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstarship_idChanging(int value);
    partial void Onstarship_idChanged();
    partial void Onpeople_idChanging(int value);
    partial void Onpeople_idChanged();
    #endregion
		
		public starships_pilot()
		{
			this._starship = default(EntityRef<starship>);
			this._people = default(EntityRef<people>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_starship_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int starship_id
		{
			get
			{
				return this._starship_id;
			}
			set
			{
				if ((this._starship_id != value))
				{
					if (this._starship.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstarship_idChanging(value);
					this.SendPropertyChanging();
					this._starship_id = value;
					this.SendPropertyChanged("starship_id");
					this.Onstarship_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_people_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int people_id
		{
			get
			{
				return this._people_id;
			}
			set
			{
				if ((this._people_id != value))
				{
					if (this._people.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpeople_idChanging(value);
					this.SendPropertyChanging();
					this._people_id = value;
					this.SendPropertyChanged("people_id");
					this.Onpeople_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="starship_starships_pilot", Storage="_starship", ThisKey="starship_id", OtherKey="id", IsForeignKey=true)]
		public starship starship
		{
			get
			{
				return this._starship.Entity;
			}
			set
			{
				starship previousValue = this._starship.Entity;
				if (((previousValue != value) 
							|| (this._starship.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._starship.Entity = null;
						previousValue.starships_pilots.Remove(this);
					}
					this._starship.Entity = value;
					if ((value != null))
					{
						value.starships_pilots.Add(this);
						this._starship_id = value.id;
					}
					else
					{
						this._starship_id = default(int);
					}
					this.SendPropertyChanged("starship");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="people_starships_pilot", Storage="_people", ThisKey="people_id", OtherKey="id", IsForeignKey=true)]
		public people people
		{
			get
			{
				return this._people.Entity;
			}
			set
			{
				people previousValue = this._people.Entity;
				if (((previousValue != value) 
							|| (this._people.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._people.Entity = null;
						previousValue.starships_pilots.Remove(this);
					}
					this._people.Entity = value;
					if ((value != null))
					{
						value.starships_pilots.Add(this);
						this._people_id = value.id;
					}
					else
					{
						this._people_id = default(int);
					}
					this.SendPropertyChanged("people");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.transports")]
	public partial class transport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _cargo_capacity;
		
		private string _consumables;
		
		private string _cost_in_credits;
		
		private System.Nullable<System.DateTime> _created;
		
		private string _crew;
		
		private System.Nullable<System.DateTime> _edited;
		
		private string _length;
		
		private string _manufacturer;
		
		private string _max_atmosphering_speed;
		
		private string _model;
		
		private string _name;
		
		private string _passengers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncargo_capacityChanging(string value);
    partial void Oncargo_capacityChanged();
    partial void OnconsumablesChanging(string value);
    partial void OnconsumablesChanged();
    partial void Oncost_in_creditsChanging(string value);
    partial void Oncost_in_creditsChanged();
    partial void OncreatedChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedChanged();
    partial void OncrewChanging(string value);
    partial void OncrewChanged();
    partial void OneditedChanging(System.Nullable<System.DateTime> value);
    partial void OneditedChanged();
    partial void OnlengthChanging(string value);
    partial void OnlengthChanged();
    partial void OnmanufacturerChanging(string value);
    partial void OnmanufacturerChanged();
    partial void Onmax_atmosphering_speedChanging(string value);
    partial void Onmax_atmosphering_speedChanged();
    partial void OnmodelChanging(string value);
    partial void OnmodelChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpassengersChanging(string value);
    partial void OnpassengersChanged();
    #endregion
		
		public transport()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cargo_capacity", DbType="NVarChar(MAX)")]
		public string cargo_capacity
		{
			get
			{
				return this._cargo_capacity;
			}
			set
			{
				if ((this._cargo_capacity != value))
				{
					this.Oncargo_capacityChanging(value);
					this.SendPropertyChanging();
					this._cargo_capacity = value;
					this.SendPropertyChanged("cargo_capacity");
					this.Oncargo_capacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_consumables", DbType="NVarChar(MAX)")]
		public string consumables
		{
			get
			{
				return this._consumables;
			}
			set
			{
				if ((this._consumables != value))
				{
					this.OnconsumablesChanging(value);
					this.SendPropertyChanging();
					this._consumables = value;
					this.SendPropertyChanged("consumables");
					this.OnconsumablesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost_in_credits", DbType="NVarChar(MAX)")]
		public string cost_in_credits
		{
			get
			{
				return this._cost_in_credits;
			}
			set
			{
				if ((this._cost_in_credits != value))
				{
					this.Oncost_in_creditsChanging(value);
					this.SendPropertyChanging();
					this._cost_in_credits = value;
					this.SendPropertyChanged("cost_in_credits");
					this.Oncost_in_creditsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime")]
		public System.Nullable<System.DateTime> created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_crew", DbType="NVarChar(MAX)")]
		public string crew
		{
			get
			{
				return this._crew;
			}
			set
			{
				if ((this._crew != value))
				{
					this.OncrewChanging(value);
					this.SendPropertyChanging();
					this._crew = value;
					this.SendPropertyChanged("crew");
					this.OncrewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edited", DbType="DateTime")]
		public System.Nullable<System.DateTime> edited
		{
			get
			{
				return this._edited;
			}
			set
			{
				if ((this._edited != value))
				{
					this.OneditedChanging(value);
					this.SendPropertyChanging();
					this._edited = value;
					this.SendPropertyChanged("edited");
					this.OneditedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_length", DbType="NVarChar(MAX)")]
		public string length
		{
			get
			{
				return this._length;
			}
			set
			{
				if ((this._length != value))
				{
					this.OnlengthChanging(value);
					this.SendPropertyChanging();
					this._length = value;
					this.SendPropertyChanged("length");
					this.OnlengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manufacturer", DbType="NVarChar(MAX)")]
		public string manufacturer
		{
			get
			{
				return this._manufacturer;
			}
			set
			{
				if ((this._manufacturer != value))
				{
					this.OnmanufacturerChanging(value);
					this.SendPropertyChanging();
					this._manufacturer = value;
					this.SendPropertyChanged("manufacturer");
					this.OnmanufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_atmosphering_speed", DbType="NVarChar(MAX)")]
		public string max_atmosphering_speed
		{
			get
			{
				return this._max_atmosphering_speed;
			}
			set
			{
				if ((this._max_atmosphering_speed != value))
				{
					this.Onmax_atmosphering_speedChanging(value);
					this.SendPropertyChanging();
					this._max_atmosphering_speed = value;
					this.SendPropertyChanged("max_atmosphering_speed");
					this.Onmax_atmosphering_speedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_model", DbType="NVarChar(MAX)")]
		public string model
		{
			get
			{
				return this._model;
			}
			set
			{
				if ((this._model != value))
				{
					this.OnmodelChanging(value);
					this.SendPropertyChanging();
					this._model = value;
					this.SendPropertyChanged("model");
					this.OnmodelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passengers", DbType="NVarChar(MAX)")]
		public string passengers
		{
			get
			{
				return this._passengers;
			}
			set
			{
				if ((this._passengers != value))
				{
					this.OnpassengersChanging(value);
					this.SendPropertyChanging();
					this._passengers = value;
					this.SendPropertyChanged("passengers");
					this.OnpassengersChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vehicles")]
	public partial class vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _vehicle_class;
		
		private EntitySet<vehicles_pilot> _vehicles_pilots;
		
		private EntitySet<films_vehicle> _films_vehicles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onvehicle_classChanging(string value);
    partial void Onvehicle_classChanged();
    #endregion
		
		public vehicle()
		{
			this._vehicles_pilots = new EntitySet<vehicles_pilot>(new Action<vehicles_pilot>(this.attach_vehicles_pilots), new Action<vehicles_pilot>(this.detach_vehicles_pilots));
			this._films_vehicles = new EntitySet<films_vehicle>(new Action<films_vehicle>(this.attach_films_vehicles), new Action<films_vehicle>(this.detach_films_vehicles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_class", DbType="NVarChar(MAX)")]
		public string vehicle_class
		{
			get
			{
				return this._vehicle_class;
			}
			set
			{
				if ((this._vehicle_class != value))
				{
					this.Onvehicle_classChanging(value);
					this.SendPropertyChanging();
					this._vehicle_class = value;
					this.SendPropertyChanged("vehicle_class");
					this.Onvehicle_classChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vehicle_vehicles_pilot", Storage="_vehicles_pilots", ThisKey="id", OtherKey="vehicle_id")]
		public EntitySet<vehicles_pilot> vehicles_pilots
		{
			get
			{
				return this._vehicles_pilots;
			}
			set
			{
				this._vehicles_pilots.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vehicle_films_vehicle", Storage="_films_vehicles", ThisKey="id", OtherKey="vehicle_id")]
		public EntitySet<films_vehicle> films_vehicles
		{
			get
			{
				return this._films_vehicles;
			}
			set
			{
				this._films_vehicles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_vehicles_pilots(vehicles_pilot entity)
		{
			this.SendPropertyChanging();
			entity.vehicle = this;
		}
		
		private void detach_vehicles_pilots(vehicles_pilot entity)
		{
			this.SendPropertyChanging();
			entity.vehicle = null;
		}
		
		private void attach_films_vehicles(films_vehicle entity)
		{
			this.SendPropertyChanging();
			entity.vehicle = this;
		}
		
		private void detach_films_vehicles(films_vehicle entity)
		{
			this.SendPropertyChanging();
			entity.vehicle = null;
		}
	}
}
#pragma warning restore 1591
